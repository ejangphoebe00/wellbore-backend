"""empty message

Revision ID: fc3a320e5521
Revises: e36f17cd32f9
Create Date: 2021-12-11 01:37:54.252256

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fc3a320e5521'
down_revision = 'e36f17cd32f9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('geosims_rt_CraneWebSecurityLevel', sa.Column('WebSecurityLevelId', sa.Integer(), nullable=False))
    op.drop_column('geosims_rt_CraneWebSecurityLevel', 'WebSecurityLevel_id')
    op.add_column('geosims_rt_Files', sa.Column('FileId', sa.Integer(), nullable=False))
    op.add_column('geosims_rt_Files', sa.Column('CoresId', sa.Integer(), nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('FluidSamplesId', sa.Integer(), nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('RockSamplesId', sa.Integer(), nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('ReportType', sa.Enum('Cores', 'Fluid_Samples', 'Rock_Samples', name='reporttypeenum'), nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('ReportPath', sa.VARCHAR(length=500), nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('PhotographPath', sa.VARCHAR(length=500), nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('CreatedById', sa.Integer(), nullable=False))
    op.drop_constraint('FK__geosims_r__Fluid__68487DD7', 'geosims_rt_Files', type_='foreignkey')
    op.drop_constraint('FK__geosims_r__Cores__66603565', 'geosims_rt_Files', type_='foreignkey')
    op.drop_constraint('FK__geosims_r__Creat__6754599E', 'geosims_rt_Files', type_='foreignkey')
    op.drop_constraint('FK__geosims_r__Rock___693CA210', 'geosims_rt_Files', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_rt_Files', 'geosims_t_Cores', ['CoresId'], ['WellboreCoreId'])
    op.create_foreign_key(None, 'geosims_rt_Files', 'geosims_t_FluidSamples', ['FluidSamplesId'], ['SampleId'])
    op.create_foreign_key(None, 'geosims_rt_Files', 'geosims_t_CraneUser', ['CreatedById'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_rt_Files', 'geosims_t_RockSamples', ['RockSamplesId'], ['id'])
    op.drop_column('geosims_rt_Files', 'File_id')
    op.drop_column('geosims_rt_Files', 'Report_path')
    op.drop_column('geosims_rt_Files', 'Fluid_samples_id')
    op.drop_column('geosims_rt_Files', 'Cores_id')
    op.drop_column('geosims_rt_Files', 'Photograph_path')
    op.drop_column('geosims_rt_Files', 'Rock_samples_id')
    op.drop_column('geosims_rt_Files', 'CreatedBy_id')
    op.drop_column('geosims_rt_Files', 'Report_type')
    op.add_column('geosims_t_Company', sa.Column('CompanyId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_Company', sa.Column('NSDNumber', sa.NVARCHAR(length=255), nullable=False))
    op.add_column('geosims_t_Company', sa.Column('CompanyCategoryId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyEntityTypeId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyEntitySubTypeId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyMajorActivityId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyActivityDivisionId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyActivityDivisionClassId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyActivityDivisionClassCategoryId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('RegistrationStatusId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('ClassifyAsUgandanId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('PrimaryCompanyKindId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('SecondaryCompanyKindId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('OtherCompanyKindId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyGroupId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('NSDFromDate', sa.Date(), nullable=True))
    op.add_column('geosims_t_Company', sa.Column('NSDToDate', sa.Date(), nullable=True))
    op.drop_constraint('FK__geosims_t__Creat__37A5467C', 'geosims_t_Company', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Modif__38996AB5', 'geosims_t_Company', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_Company', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_Company', 'geosims_t_CraneUser', ['CreatedBy'], ['CraneUserId'])
    op.drop_column('geosims_t_Company', 'ClassifyAsUgandan_id')
    op.drop_column('geosims_t_Company', 'CompanyActivityDivisionClass_id')
    op.drop_column('geosims_t_Company', 'CompanyGroup_id')
    op.drop_column('geosims_t_Company', 'SecondaryCompanyKind_id')
    op.drop_column('geosims_t_Company', 'CompanyCategory_id')
    op.drop_column('geosims_t_Company', 'NSD_Number')
    op.drop_column('geosims_t_Company', 'CompanyActivityDivision_id')
    op.drop_column('geosims_t_Company', 'OtherCompanyKind_id')
    op.drop_column('geosims_t_Company', 'NSD_FromDate')
    op.drop_column('geosims_t_Company', 'RegistrationStatus_id')
    op.drop_column('geosims_t_Company', 'Company_id')
    op.drop_column('geosims_t_Company', 'CompanyMajorActivity_id')
    op.drop_column('geosims_t_Company', 'CompanyActivityDivisionClassCategory_id')
    op.drop_column('geosims_t_Company', 'CompanyEntityType_id')
    op.drop_column('geosims_t_Company', 'CompanyEntitySubType_id')
    op.drop_column('geosims_t_Company', 'NSD_ToDate')
    op.drop_column('geosims_t_Company', 'PrimaryCompanyKind_id')
    op.add_column('geosims_t_CoreCatalog', sa.Column('CoreCatalogId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_CoreCatalog', sa.Column('WellboreCoreId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_CoreCatalog', sa.Column('WasAnalysedId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CoreCatalog', sa.Column('TopStratLithoId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CoreCatalog', sa.Column('BottomStratLithoId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CoreCatalog', sa.Column('CreatedById', sa.Integer(), nullable=False))
    op.drop_constraint('FK__geosims_t__Creat__6E01572D', 'geosims_t_CoreCatalog', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Wellb__70DDC3D8', 'geosims_t_CoreCatalog', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Botto__6D0D32F4', 'geosims_t_CoreCatalog', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Modif__6EF57B66', 'geosims_t_CoreCatalog', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__TopSt__6FE99F9F', 'geosims_t_CoreCatalog', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_CoreCatalog', 'geosims_t_Cores', ['WellboreCoreId'], ['WellboreCoreId'])
    op.create_foreign_key(None, 'geosims_t_CoreCatalog', 'geosims_t_CraneUser', ['CreatedById'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_CoreCatalog', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_CoreCatalog', 'geosims_t_StratLithoUnit', ['BottomStratLithoId'], ['StratLithoId'])
    op.create_foreign_key(None, 'geosims_t_CoreCatalog', 'geosims_t_StratLithoUnit', ['TopStratLithoId'], ['StratLithoId'])
    op.drop_column('geosims_t_CoreCatalog', 'TopStratLitho_id')
    op.drop_column('geosims_t_CoreCatalog', 'BottomStratLitho_id')
    op.drop_column('geosims_t_CoreCatalog', 'CoreCatalog_id')
    op.drop_column('geosims_t_CoreCatalog', 'CreatedBy_id')
    op.drop_column('geosims_t_CoreCatalog', 'WellboreCore_id')
    op.drop_column('geosims_t_CoreCatalog', 'WasAnalysed_id')
    op.add_column('geosims_t_Cores', sa.Column('WellboreCoreId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_Cores', sa.Column('WBCoringContractorId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Cores', sa.Column('CoreTopStratLithoId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Cores', sa.Column('CoreBottomStratLithoId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Cores', sa.Column('CreatedById', sa.Integer(), nullable=False))
    op.drop_constraint('FK__geosims_t__CoreT__5441852A', 'geosims_t_Cores', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__CoreB__534D60F1', 'geosims_t_Cores', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Creat__5535A963', 'geosims_t_Cores', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Modif__5629CD9C', 'geosims_t_Cores', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__WBCor__571DF1D5', 'geosims_t_Cores', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_Cores', 'geosims_t_Company', ['WBCoringContractorId'], ['CompanyId'])
    op.create_foreign_key(None, 'geosims_t_Cores', 'geosims_t_CraneUser', ['CreatedById'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_Cores', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_Cores', 'geosims_t_StratLithoUnit', ['CoreBottomStratLithoId'], ['StratLithoId'])
    op.create_foreign_key(None, 'geosims_t_Cores', 'geosims_t_StratLithoUnit', ['CoreTopStratLithoId'], ['StratLithoId'])
    op.drop_column('geosims_t_Cores', 'WBCoringContractor_id')
    op.drop_column('geosims_t_Cores', 'CoreBottomStratLitho_id')
    op.drop_column('geosims_t_Cores', 'CreatedBy_id')
    op.drop_column('geosims_t_Cores', 'CoreTopStratLitho_id')
    op.drop_column('geosims_t_Cores', 'WellboreCore_id')
    op.add_column('geosims_t_CraneUser', sa.Column('CraneUserId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_CraneUser', sa.Column('UserCompanyId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserPremsUserId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserStaffId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserSecurityLevelId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserWebSecurityLevelId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_CraneUser', sa.Column('UserNogtrWebSecurityLevelId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserPremsWebSecurityLevelId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserIntranetSecurityLevelId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserNsdWebSecurityLevelId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('LoginStatusId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('CreatedById', sa.Integer(), nullable=True))
    op.drop_constraint('FK__geosims_t__UserW__2F10007B', 'geosims_t_CraneUser', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_CraneUser', 'geosims_rt_CraneWebSecurityLevel', ['UserWebSecurityLevelId'], ['WebSecurityLevelId'])
    op.drop_column('geosims_t_CraneUser', 'LoginStatus_id')
    op.drop_column('geosims_t_CraneUser', 'UserPremsUser_id')
    op.drop_column('geosims_t_CraneUser', 'UserCompany_id')
    op.drop_column('geosims_t_CraneUser', 'CraneUser_id')
    op.drop_column('geosims_t_CraneUser', 'UserNogtrWebSecurityLevel_id')
    op.drop_column('geosims_t_CraneUser', 'UserPremsWebSecurityLevel_id')
    op.drop_column('geosims_t_CraneUser', 'UserStaff_id')
    op.drop_column('geosims_t_CraneUser', 'UserIntranetSecurityLevel_id')
    op.drop_column('geosims_t_CraneUser', 'UserWebSecurityLevel_id')
    op.drop_column('geosims_t_CraneUser', 'UserNsdWebSecurityLevel_id')
    op.drop_column('geosims_t_CraneUser', 'CreatedBy_id')
    op.drop_column('geosims_t_CraneUser', 'UserSecurityLevel_id')
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('UserLoginHistoryId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('HistLogUserId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('LogStaffId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('CraneCompanyId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('LogCompanyAuthorisedUserId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('LoginStatusId', sa.Integer(), nullable=True))
    op.drop_constraint('FK__geosims_t__HistL__3B75D760', 'geosims_t_CraneUserLoginHistory', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_CraneUserLoginHistory', 'geosims_t_CraneUser', ['HistLogUserId'], ['CraneUserId'])
    op.drop_column('geosims_t_CraneUserLoginHistory', 'LoginStatus_id')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'LogCompanyAuthorisedUser_id')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'UserLoginHistory_id')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'LogStaff_id')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'CraneCompany_id')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'HistLogUser_id')
    op.add_column('geosims_t_Cuttings', sa.Column('SampleId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_Cuttings', sa.Column('WellboreId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('SampleBoxNumber', sa.VARCHAR(length=100), nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('CuttingCategory', sa.Enum('Washed_Dried', 'Washed_Wet', 'Wet_Unwashed', 'Dry_Unwashed', name='cuttingscategoryenum'), nullable=False))
    op.add_column('geosims_t_Cuttings', sa.Column('SampleType', sa.VARCHAR(length=100), nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('MinimumDepth', sa.Float(), nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('MaximumDepth', sa.Float(), nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('SampleInterval', sa.VARCHAR(length=100), nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('DateReceived', sa.DateTime(), nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('OtherDescription', sa.VARCHAR(length=500), nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('CreatedById', sa.Integer(), nullable=False))
    op.drop_constraint('FK__geosims_t__Modif__5CD6CB2B', 'geosims_t_Cuttings', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Creat__5BE2A6F2', 'geosims_t_Cuttings', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Wellb__5DCAEF64', 'geosims_t_Cuttings', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_Cuttings', 'geosims_t_CraneUser', ['CreatedById'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_Cuttings', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_Cuttings', 'geosims_t_Wellbore', ['WellboreId'], ['WellboreId'])
    op.drop_column('geosims_t_Cuttings', 'Date_received')
    op.drop_column('geosims_t_Cuttings', 'Maximum_depth')
    op.drop_column('geosims_t_Cuttings', 'Sample_id')
    op.drop_column('geosims_t_Cuttings', 'Minimum_depth')
    op.drop_column('geosims_t_Cuttings', 'Wellbore_id')
    op.drop_column('geosims_t_Cuttings', 'Sample_interval')
    op.drop_column('geosims_t_Cuttings', 'Other_description')
    op.drop_column('geosims_t_Cuttings', 'Sample_type')
    op.drop_column('geosims_t_Cuttings', 'CreatedBy_id')
    op.drop_column('geosims_t_Cuttings', 'Cutting_category')
    op.drop_column('geosims_t_Cuttings', 'Sample_box_number')
    op.add_column('geosims_t_FluidSamples', sa.Column('SampleId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_FluidSamples', sa.Column('WellboreId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('SamplingActivity', sa.VARCHAR(length=100), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('FluidCategory', sa.Enum('Oil', 'Gas', 'Water', name='fluidcategoryenum'), nullable=False))
    op.add_column('geosims_t_FluidSamples', sa.Column('SampleType', sa.VARCHAR(length=100), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('SampleVolume', sa.VARCHAR(length=100), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('SampleBasin', sa.Enum('Edward-George', 'Semiliki', 'Pakwach', 'The Albertine Graben', 'Hoima Basin', 'Lake Kyoga Basin', 'Lake Wamala Basin', 'Kadam-Moroto Basin', name='fluidsamplebasin'), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('DepthObtained', sa.Float(), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('DateCollected', sa.DateTime(), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('DateReceived', sa.DateTime(), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('SamplingCompany', sa.Integer(), nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('CreatedById', sa.Integer(), nullable=False))
    op.drop_constraint('FK__geosims_t__Modif__619B8048', 'geosims_t_FluidSamples', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Wellb__6383C8BA', 'geosims_t_FluidSamples', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Sampl__628FA481', 'geosims_t_FluidSamples', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Creat__60A75C0F', 'geosims_t_FluidSamples', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_FluidSamples', 'geosims_t_Company', ['SamplingCompany'], ['CompanyId'])
    op.create_foreign_key(None, 'geosims_t_FluidSamples', 'geosims_t_Wellbore', ['WellboreId'], ['WellboreId'])
    op.create_foreign_key(None, 'geosims_t_FluidSamples', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_FluidSamples', 'geosims_t_CraneUser', ['CreatedById'], ['CraneUserId'])
    op.drop_column('geosims_t_FluidSamples', 'Date_received')
    op.drop_column('geosims_t_FluidSamples', 'Sample_id')
    op.drop_column('geosims_t_FluidSamples', 'Sampling_activity')
    op.drop_column('geosims_t_FluidSamples', 'Wellbore_id')
    op.drop_column('geosims_t_FluidSamples', 'Date_collected')
    op.drop_column('geosims_t_FluidSamples', 'Fluid_category')
    op.drop_column('geosims_t_FluidSamples', 'Sample_volume')
    op.drop_column('geosims_t_FluidSamples', 'Sample_basin')
    op.drop_column('geosims_t_FluidSamples', 'Sampling_company')
    op.drop_column('geosims_t_FluidSamples', 'Depth_obtained')
    op.drop_column('geosims_t_FluidSamples', 'CreatedBy_id')
    op.drop_column('geosims_t_FluidSamples', 'Sample_type')
    op.add_column('geosims_t_RockSamples', sa.Column('StoreId', sa.VARCHAR(length=100), nullable=False))
    op.add_column('geosims_t_RockSamples', sa.Column('DateCollected', sa.DateTime(), nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('DateReceived', sa.DateTime(), nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('SampleBasin', sa.Enum('Edward-George', 'Semiliki', 'Pakwach', 'The Albertine Graben', 'Hoima Basin', 'Lake Kyoga Basin', 'Lake Wamala Basin', 'Kadam-Moroto Basin', name='basinsenum'), nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('SampleName', sa.VARCHAR(length=100), nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('CoordinateLocation', sa.VARCHAR(length=100), nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('PetrographicDescription', sa.VARCHAR(length=500), nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('CreatedById', sa.Integer(), nullable=False))
    op.drop_constraint('FK__geosims_t__Creat__3E52440B', 'geosims_t_RockSamples', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Modif__3F466844', 'geosims_t_RockSamples', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_RockSamples', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_RockSamples', 'geosims_t_CraneUser', ['CreatedById'], ['CraneUserId'])
    op.drop_column('geosims_t_RockSamples', 'Date_received')
    op.drop_column('geosims_t_RockSamples', 'Coordinate_location')
    op.drop_column('geosims_t_RockSamples', 'Date_collected')
    op.drop_column('geosims_t_RockSamples', 'Sample_name')
    op.drop_column('geosims_t_RockSamples', 'Sample_basin')
    op.drop_column('geosims_t_RockSamples', 'CreatedBy_id')
    op.drop_column('geosims_t_RockSamples', 'Store_id')
    op.drop_column('geosims_t_RockSamples', 'Petrographic_description')
    op.add_column('geosims_t_StratLithoUnit', sa.Column('StratLithoId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_StratLithoUnit', sa.Column('IsReservoirUnitId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_StratLithoUnit', sa.Column('CreatedById', sa.Integer(), nullable=False))
    op.drop_constraint('FK__geosims_t__Creat__4316F928', 'geosims_t_StratLithoUnit', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Modif__440B1D61', 'geosims_t_StratLithoUnit', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_StratLithoUnit', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_StratLithoUnit', 'geosims_t_CraneUser', ['CreatedById'], ['CraneUserId'])
    op.drop_column('geosims_t_StratLithoUnit', 'IsReservoirUnit_id')
    op.drop_column('geosims_t_StratLithoUnit', 'StratLitho_id')
    op.drop_column('geosims_t_StratLithoUnit', 'CreatedBy_id')
    op.add_column('geosims_t_Wellbore', sa.Column('WellboreId', sa.Integer(), nullable=False))
    op.add_column('geosims_t_Wellbore', sa.Column('WellboreType', sa.Enum('Exploration', 'Development', name='wellboretypeenum'), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('WellboreTypeId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('WellborePurposeId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('ProspectId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('WellboreContentId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('LicenseOperatorCompanyId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('DrillingContractorCompanyId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('TDMD', sa.Float(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('TDTVD', sa.Float(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('TDDate', sa.Date(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('CoreContractorId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('MDTDoneId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('FETDoneId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('DSTDoneId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('ManifoldFlowTestedId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('DSTContractorId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('HasPetrophysicalLogsId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('PetrophysicalContractorId', sa.Integer(), nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('CreatedById', sa.Integer(), nullable=False))
    op.drop_constraint('FK__geosims_t__Drill__4BAC3F29', 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Prosp__4F7CD00D', 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__DST_C__4AB81AF0', 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Modif__4D94879B', 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Licen__4CA06362', 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__CoreC__48CFD27E', 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Petro__4E88ABD4', 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint('FK__geosims_t__Creat__49C3F6B7', 'geosims_t_Wellbore', type_='foreignkey')
    op.create_foreign_key(None, 'geosims_t_Wellbore', 'geosims_t_Company', ['PetrophysicalContractorId'], ['CompanyId'])
    op.create_foreign_key(None, 'geosims_t_Wellbore', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_Wellbore', 'geosims_t_Company', ['ProspectId'], ['CompanyId'])
    op.create_foreign_key(None, 'geosims_t_Wellbore', 'geosims_t_Company', ['CoreContractorId'], ['CompanyId'])
    op.create_foreign_key(None, 'geosims_t_Wellbore', 'geosims_t_Company', ['DSTContractorId'], ['CompanyId'])
    op.create_foreign_key(None, 'geosims_t_Wellbore', 'geosims_t_CraneUser', ['CreatedById'], ['CraneUserId'])
    op.create_foreign_key(None, 'geosims_t_Wellbore', 'geosims_t_Company', ['DrillingContractorCompanyId'], ['CompanyId'])
    op.create_foreign_key(None, 'geosims_t_Wellbore', 'geosims_t_Company', ['LicenseOperatorCompanyId'], ['CompanyId'])
    op.drop_column('geosims_t_Wellbore', 'WellborePurpose_id')
    op.drop_column('geosims_t_Wellbore', 'Prospect_id')
    op.drop_column('geosims_t_Wellbore', 'DST_Contractor_id')
    op.drop_column('geosims_t_Wellbore', 'WellboreContent_id')
    op.drop_column('geosims_t_Wellbore', 'CreatedBy_id')
    op.drop_column('geosims_t_Wellbore', 'MDT_Done_id')
    op.drop_column('geosims_t_Wellbore', 'TD_MD')
    op.drop_column('geosims_t_Wellbore', 'Wellbore_type')
    op.drop_column('geosims_t_Wellbore', 'Wellbore_id')
    op.drop_column('geosims_t_Wellbore', 'WellboreType_id')
    op.drop_column('geosims_t_Wellbore', 'DST_Done_id')
    op.drop_column('geosims_t_Wellbore', 'FET_Done_id')
    op.drop_column('geosims_t_Wellbore', 'LicenseOperatorCompany_id')
    op.drop_column('geosims_t_Wellbore', 'CoreContractor_id')
    op.drop_column('geosims_t_Wellbore', 'TD_TVD')
    op.drop_column('geosims_t_Wellbore', 'TD_Date')
    op.drop_column('geosims_t_Wellbore', 'HasPetrophysicalLogs_id')
    op.drop_column('geosims_t_Wellbore', 'PetrophysicalContractor_id')
    op.drop_column('geosims_t_Wellbore', 'DrillingContractorCompany_id')
    op.drop_column('geosims_t_Wellbore', 'ManifoldFlowTested_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('geosims_t_Wellbore', sa.Column('ManifoldFlowTested_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('DrillingContractorCompany_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('PetrophysicalContractor_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('HasPetrophysicalLogs_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('TD_Date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('TD_TVD', sa.FLOAT(precision=53), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('CoreContractor_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('LicenseOperatorCompany_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('FET_Done_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('DST_Done_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('WellboreType_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('Wellbore_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_Wellbore', sa.Column('Wellbore_type', sa.VARCHAR(length=11, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('TD_MD', sa.FLOAT(precision=53), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('MDT_Done_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_Wellbore', sa.Column('WellboreContent_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('DST_Contractor_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('Prospect_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Wellbore', sa.Column('WellborePurpose_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Wellbore', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Wellbore', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__Creat__49C3F6B7', 'geosims_t_Wellbore', 'geosims_t_CraneUser', ['CreatedBy_id'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__Petro__4E88ABD4', 'geosims_t_Wellbore', 'geosims_t_Company', ['PetrophysicalContractor_id'], ['Company_id'])
    op.create_foreign_key('FK__geosims_t__CoreC__48CFD27E', 'geosims_t_Wellbore', 'geosims_t_Company', ['CoreContractor_id'], ['Company_id'])
    op.create_foreign_key('FK__geosims_t__Licen__4CA06362', 'geosims_t_Wellbore', 'geosims_t_Company', ['LicenseOperatorCompany_id'], ['Company_id'])
    op.create_foreign_key('FK__geosims_t__Modif__4D94879B', 'geosims_t_Wellbore', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__DST_C__4AB81AF0', 'geosims_t_Wellbore', 'geosims_t_Company', ['DST_Contractor_id'], ['Company_id'])
    op.create_foreign_key('FK__geosims_t__Prosp__4F7CD00D', 'geosims_t_Wellbore', 'geosims_t_Company', ['Prospect_id'], ['Company_id'])
    op.create_foreign_key('FK__geosims_t__Drill__4BAC3F29', 'geosims_t_Wellbore', 'geosims_t_Company', ['DrillingContractorCompany_id'], ['Company_id'])
    op.drop_column('geosims_t_Wellbore', 'CreatedById')
    op.drop_column('geosims_t_Wellbore', 'PetrophysicalContractorId')
    op.drop_column('geosims_t_Wellbore', 'HasPetrophysicalLogsId')
    op.drop_column('geosims_t_Wellbore', 'DSTContractorId')
    op.drop_column('geosims_t_Wellbore', 'ManifoldFlowTestedId')
    op.drop_column('geosims_t_Wellbore', 'DSTDoneId')
    op.drop_column('geosims_t_Wellbore', 'FETDoneId')
    op.drop_column('geosims_t_Wellbore', 'MDTDoneId')
    op.drop_column('geosims_t_Wellbore', 'CoreContractorId')
    op.drop_column('geosims_t_Wellbore', 'TDDate')
    op.drop_column('geosims_t_Wellbore', 'TDTVD')
    op.drop_column('geosims_t_Wellbore', 'TDMD')
    op.drop_column('geosims_t_Wellbore', 'DrillingContractorCompanyId')
    op.drop_column('geosims_t_Wellbore', 'LicenseOperatorCompanyId')
    op.drop_column('geosims_t_Wellbore', 'WellboreContentId')
    op.drop_column('geosims_t_Wellbore', 'ProspectId')
    op.drop_column('geosims_t_Wellbore', 'WellborePurposeId')
    op.drop_column('geosims_t_Wellbore', 'WellboreTypeId')
    op.drop_column('geosims_t_Wellbore', 'WellboreType')
    op.drop_column('geosims_t_Wellbore', 'WellboreId')
    op.add_column('geosims_t_StratLithoUnit', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_StratLithoUnit', sa.Column('StratLitho_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_StratLithoUnit', sa.Column('IsReservoirUnit_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_StratLithoUnit', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_StratLithoUnit', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__Modif__440B1D61', 'geosims_t_StratLithoUnit', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__Creat__4316F928', 'geosims_t_StratLithoUnit', 'geosims_t_CraneUser', ['CreatedBy_id'], ['CraneUser_id'])
    op.drop_column('geosims_t_StratLithoUnit', 'CreatedById')
    op.drop_column('geosims_t_StratLithoUnit', 'IsReservoirUnitId')
    op.drop_column('geosims_t_StratLithoUnit', 'StratLithoId')
    op.add_column('geosims_t_RockSamples', sa.Column('Petrographic_description', sa.VARCHAR(length=500, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('Store_id', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False))
    op.add_column('geosims_t_RockSamples', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_RockSamples', sa.Column('Sample_basin', sa.VARCHAR(length=20, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('Sample_name', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('Date_collected', sa.DATETIME(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('Coordinate_location', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_RockSamples', sa.Column('Date_received', sa.DATETIME(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_RockSamples', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_RockSamples', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__Modif__3F466844', 'geosims_t_RockSamples', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__Creat__3E52440B', 'geosims_t_RockSamples', 'geosims_t_CraneUser', ['CreatedBy_id'], ['CraneUser_id'])
    op.drop_column('geosims_t_RockSamples', 'CreatedById')
    op.drop_column('geosims_t_RockSamples', 'PetrographicDescription')
    op.drop_column('geosims_t_RockSamples', 'CoordinateLocation')
    op.drop_column('geosims_t_RockSamples', 'SampleName')
    op.drop_column('geosims_t_RockSamples', 'SampleBasin')
    op.drop_column('geosims_t_RockSamples', 'DateReceived')
    op.drop_column('geosims_t_RockSamples', 'DateCollected')
    op.drop_column('geosims_t_RockSamples', 'StoreId')
    op.add_column('geosims_t_FluidSamples', sa.Column('Sample_type', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_FluidSamples', sa.Column('Depth_obtained', sa.FLOAT(precision=53), autoincrement=False, nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('Sampling_company', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('Sample_basin', sa.VARCHAR(length=20, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('Sample_volume', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('Fluid_category', sa.VARCHAR(length=5, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False))
    op.add_column('geosims_t_FluidSamples', sa.Column('Date_collected', sa.DATETIME(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('Wellbore_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('Sampling_activity', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_FluidSamples', sa.Column('Sample_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_FluidSamples', sa.Column('Date_received', sa.DATETIME(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_FluidSamples', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_FluidSamples', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_FluidSamples', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_FluidSamples', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__Creat__60A75C0F', 'geosims_t_FluidSamples', 'geosims_t_CraneUser', ['CreatedBy_id'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__Sampl__628FA481', 'geosims_t_FluidSamples', 'geosims_t_Company', ['Sampling_company'], ['Company_id'])
    op.create_foreign_key('FK__geosims_t__Wellb__6383C8BA', 'geosims_t_FluidSamples', 'geosims_t_Wellbore', ['Wellbore_id'], ['Wellbore_id'])
    op.create_foreign_key('FK__geosims_t__Modif__619B8048', 'geosims_t_FluidSamples', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUser_id'])
    op.drop_column('geosims_t_FluidSamples', 'CreatedById')
    op.drop_column('geosims_t_FluidSamples', 'SamplingCompany')
    op.drop_column('geosims_t_FluidSamples', 'DateReceived')
    op.drop_column('geosims_t_FluidSamples', 'DateCollected')
    op.drop_column('geosims_t_FluidSamples', 'DepthObtained')
    op.drop_column('geosims_t_FluidSamples', 'SampleBasin')
    op.drop_column('geosims_t_FluidSamples', 'SampleVolume')
    op.drop_column('geosims_t_FluidSamples', 'SampleType')
    op.drop_column('geosims_t_FluidSamples', 'FluidCategory')
    op.drop_column('geosims_t_FluidSamples', 'SamplingActivity')
    op.drop_column('geosims_t_FluidSamples', 'WellboreId')
    op.drop_column('geosims_t_FluidSamples', 'SampleId')
    op.add_column('geosims_t_Cuttings', sa.Column('Sample_box_number', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('Cutting_category', sa.VARCHAR(length=12, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False))
    op.add_column('geosims_t_Cuttings', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_Cuttings', sa.Column('Sample_type', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('Other_description', sa.VARCHAR(length=500, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('Sample_interval', sa.VARCHAR(length=100, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('Wellbore_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('Minimum_depth', sa.FLOAT(precision=53), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('Sample_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_Cuttings', sa.Column('Maximum_depth', sa.FLOAT(precision=53), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cuttings', sa.Column('Date_received', sa.DATETIME(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_Cuttings', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Cuttings', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Cuttings', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__Wellb__5DCAEF64', 'geosims_t_Cuttings', 'geosims_t_Wellbore', ['Wellbore_id'], ['Wellbore_id'])
    op.create_foreign_key('FK__geosims_t__Creat__5BE2A6F2', 'geosims_t_Cuttings', 'geosims_t_CraneUser', ['CreatedBy_id'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__Modif__5CD6CB2B', 'geosims_t_Cuttings', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUser_id'])
    op.drop_column('geosims_t_Cuttings', 'CreatedById')
    op.drop_column('geosims_t_Cuttings', 'OtherDescription')
    op.drop_column('geosims_t_Cuttings', 'DateReceived')
    op.drop_column('geosims_t_Cuttings', 'SampleInterval')
    op.drop_column('geosims_t_Cuttings', 'MaximumDepth')
    op.drop_column('geosims_t_Cuttings', 'MinimumDepth')
    op.drop_column('geosims_t_Cuttings', 'SampleType')
    op.drop_column('geosims_t_Cuttings', 'CuttingCategory')
    op.drop_column('geosims_t_Cuttings', 'SampleBoxNumber')
    op.drop_column('geosims_t_Cuttings', 'WellboreId')
    op.drop_column('geosims_t_Cuttings', 'SampleId')
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('HistLogUser_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('CraneCompany_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('LogStaff_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('UserLoginHistory_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('LogCompanyAuthorisedUser_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUserLoginHistory', sa.Column('LoginStatus_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_CraneUserLoginHistory', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__HistL__3B75D760', 'geosims_t_CraneUserLoginHistory', 'geosims_t_CraneUser', ['HistLogUser_id'], ['CraneUser_id'])
    op.drop_column('geosims_t_CraneUserLoginHistory', 'LoginStatusId')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'LogCompanyAuthorisedUserId')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'CraneCompanyId')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'LogStaffId')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'HistLogUserId')
    op.drop_column('geosims_t_CraneUserLoginHistory', 'UserLoginHistoryId')
    op.add_column('geosims_t_CraneUser', sa.Column('UserSecurityLevel_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserNsdWebSecurityLevel_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserWebSecurityLevel_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_CraneUser', sa.Column('UserIntranetSecurityLevel_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserStaff_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserPremsWebSecurityLevel_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserNogtrWebSecurityLevel_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('CraneUser_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_CraneUser', sa.Column('UserCompany_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('UserPremsUser_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CraneUser', sa.Column('LoginStatus_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_CraneUser', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__UserW__2F10007B', 'geosims_t_CraneUser', 'geosims_rt_CraneWebSecurityLevel', ['UserWebSecurityLevel_id'], ['WebSecurityLevel_id'])
    op.drop_column('geosims_t_CraneUser', 'CreatedById')
    op.drop_column('geosims_t_CraneUser', 'LoginStatusId')
    op.drop_column('geosims_t_CraneUser', 'UserNsdWebSecurityLevelId')
    op.drop_column('geosims_t_CraneUser', 'UserIntranetSecurityLevelId')
    op.drop_column('geosims_t_CraneUser', 'UserPremsWebSecurityLevelId')
    op.drop_column('geosims_t_CraneUser', 'UserNogtrWebSecurityLevelId')
    op.drop_column('geosims_t_CraneUser', 'UserWebSecurityLevelId')
    op.drop_column('geosims_t_CraneUser', 'UserSecurityLevelId')
    op.drop_column('geosims_t_CraneUser', 'UserStaffId')
    op.drop_column('geosims_t_CraneUser', 'UserPremsUserId')
    op.drop_column('geosims_t_CraneUser', 'UserCompanyId')
    op.drop_column('geosims_t_CraneUser', 'CraneUserId')
    op.add_column('geosims_t_Cores', sa.Column('WellboreCore_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_Cores', sa.Column('CoreTopStratLitho_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cores', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_Cores', sa.Column('CoreBottomStratLitho_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Cores', sa.Column('WBCoringContractor_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_Cores', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Cores', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Cores', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Cores', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Cores', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__WBCor__571DF1D5', 'geosims_t_Cores', 'geosims_t_Company', ['WBCoringContractor_id'], ['Company_id'])
    op.create_foreign_key('FK__geosims_t__Modif__5629CD9C', 'geosims_t_Cores', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__Creat__5535A963', 'geosims_t_Cores', 'geosims_t_CraneUser', ['CreatedBy_id'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__CoreB__534D60F1', 'geosims_t_Cores', 'geosims_t_StratLithoUnit', ['CoreBottomStratLitho_id'], ['StratLitho_id'])
    op.create_foreign_key('FK__geosims_t__CoreT__5441852A', 'geosims_t_Cores', 'geosims_t_StratLithoUnit', ['CoreTopStratLitho_id'], ['StratLitho_id'])
    op.drop_column('geosims_t_Cores', 'CreatedById')
    op.drop_column('geosims_t_Cores', 'CoreBottomStratLithoId')
    op.drop_column('geosims_t_Cores', 'CoreTopStratLithoId')
    op.drop_column('geosims_t_Cores', 'WBCoringContractorId')
    op.drop_column('geosims_t_Cores', 'WellboreCoreId')
    op.add_column('geosims_t_CoreCatalog', sa.Column('WasAnalysed_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CoreCatalog', sa.Column('WellboreCore_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_CoreCatalog', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_t_CoreCatalog', sa.Column('CoreCatalog_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_CoreCatalog', sa.Column('BottomStratLitho_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_CoreCatalog', sa.Column('TopStratLitho_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_CoreCatalog', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_CoreCatalog', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_CoreCatalog', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_CoreCatalog', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_CoreCatalog', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__TopSt__6FE99F9F', 'geosims_t_CoreCatalog', 'geosims_t_StratLithoUnit', ['TopStratLitho_id'], ['StratLitho_id'])
    op.create_foreign_key('FK__geosims_t__Modif__6EF57B66', 'geosims_t_CoreCatalog', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__Botto__6D0D32F4', 'geosims_t_CoreCatalog', 'geosims_t_StratLithoUnit', ['BottomStratLitho_id'], ['StratLitho_id'])
    op.create_foreign_key('FK__geosims_t__Wellb__70DDC3D8', 'geosims_t_CoreCatalog', 'geosims_t_Cores', ['WellboreCore_id'], ['WellboreCore_id'])
    op.create_foreign_key('FK__geosims_t__Creat__6E01572D', 'geosims_t_CoreCatalog', 'geosims_t_CraneUser', ['CreatedBy_id'], ['CraneUser_id'])
    op.drop_column('geosims_t_CoreCatalog', 'CreatedById')
    op.drop_column('geosims_t_CoreCatalog', 'BottomStratLithoId')
    op.drop_column('geosims_t_CoreCatalog', 'TopStratLithoId')
    op.drop_column('geosims_t_CoreCatalog', 'WasAnalysedId')
    op.drop_column('geosims_t_CoreCatalog', 'WellboreCoreId')
    op.drop_column('geosims_t_CoreCatalog', 'CoreCatalogId')
    op.add_column('geosims_t_Company', sa.Column('PrimaryCompanyKind_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('NSD_ToDate', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyEntitySubType_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyEntityType_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyActivityDivisionClassCategory_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyMajorActivity_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('Company_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.add_column('geosims_t_Company', sa.Column('RegistrationStatus_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('NSD_FromDate', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('OtherCompanyKind_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyActivityDivision_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('NSD_Number', sa.NVARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('geosims_t_Company', sa.Column('CompanyCategory_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('SecondaryCompanyKind_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyGroup_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('CompanyActivityDivisionClass_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_t_Company', sa.Column('ClassifyAsUgandan_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'geosims_t_Company', type_='foreignkey')
    op.drop_constraint(None, 'geosims_t_Company', type_='foreignkey')
    op.create_foreign_key('FK__geosims_t__Modif__38996AB5', 'geosims_t_Company', 'geosims_t_CraneUser', ['ModifiedBy'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_t__Creat__37A5467C', 'geosims_t_Company', 'geosims_t_CraneUser', ['CreatedBy'], ['CraneUser_id'])
    op.drop_column('geosims_t_Company', 'NSDToDate')
    op.drop_column('geosims_t_Company', 'NSDFromDate')
    op.drop_column('geosims_t_Company', 'CompanyGroupId')
    op.drop_column('geosims_t_Company', 'OtherCompanyKindId')
    op.drop_column('geosims_t_Company', 'SecondaryCompanyKindId')
    op.drop_column('geosims_t_Company', 'PrimaryCompanyKindId')
    op.drop_column('geosims_t_Company', 'ClassifyAsUgandanId')
    op.drop_column('geosims_t_Company', 'RegistrationStatusId')
    op.drop_column('geosims_t_Company', 'CompanyActivityDivisionClassCategoryId')
    op.drop_column('geosims_t_Company', 'CompanyActivityDivisionClassId')
    op.drop_column('geosims_t_Company', 'CompanyActivityDivisionId')
    op.drop_column('geosims_t_Company', 'CompanyMajorActivityId')
    op.drop_column('geosims_t_Company', 'CompanyEntitySubTypeId')
    op.drop_column('geosims_t_Company', 'CompanyEntityTypeId')
    op.drop_column('geosims_t_Company', 'CompanyCategoryId')
    op.drop_column('geosims_t_Company', 'NSDNumber')
    op.drop_column('geosims_t_Company', 'CompanyId')
    op.add_column('geosims_rt_Files', sa.Column('Report_type', sa.VARCHAR(length=13, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('CreatedBy_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('geosims_rt_Files', sa.Column('Rock_samples_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('Photograph_path', sa.VARCHAR(length=500, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('Cores_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('Fluid_samples_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('Report_path', sa.VARCHAR(length=500, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('geosims_rt_Files', sa.Column('File_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'geosims_rt_Files', type_='foreignkey')
    op.drop_constraint(None, 'geosims_rt_Files', type_='foreignkey')
    op.drop_constraint(None, 'geosims_rt_Files', type_='foreignkey')
    op.drop_constraint(None, 'geosims_rt_Files', type_='foreignkey')
    op.create_foreign_key('FK__geosims_r__Rock___693CA210', 'geosims_rt_Files', 'geosims_t_RockSamples', ['Rock_samples_id'], ['id'])
    op.create_foreign_key('FK__geosims_r__Creat__6754599E', 'geosims_rt_Files', 'geosims_t_CraneUser', ['CreatedBy_id'], ['CraneUser_id'])
    op.create_foreign_key('FK__geosims_r__Cores__66603565', 'geosims_rt_Files', 'geosims_t_Cores', ['Cores_id'], ['WellboreCore_id'])
    op.create_foreign_key('FK__geosims_r__Fluid__68487DD7', 'geosims_rt_Files', 'geosims_t_FluidSamples', ['Fluid_samples_id'], ['Sample_id'])
    op.drop_column('geosims_rt_Files', 'CreatedById')
    op.drop_column('geosims_rt_Files', 'PhotographPath')
    op.drop_column('geosims_rt_Files', 'ReportPath')
    op.drop_column('geosims_rt_Files', 'ReportType')
    op.drop_column('geosims_rt_Files', 'RockSamplesId')
    op.drop_column('geosims_rt_Files', 'FluidSamplesId')
    op.drop_column('geosims_rt_Files', 'CoresId')
    op.drop_column('geosims_rt_Files', 'FileId')
    op.add_column('geosims_rt_CraneWebSecurityLevel', sa.Column('WebSecurityLevel_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False))
    op.drop_column('geosims_rt_CraneWebSecurityLevel', 'WebSecurityLevelId')
    op.drop_table('geosims_rt_PasswordReset')

    op.create_table('geosims_rt_PasswordReset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ResetKey', sa.String(length=128), nullable=True),
    sa.Column('CraneUserId', sa.Integer(), nullable=True),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('HasActivated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['CraneUserId'], ['geosims_t_CraneUser.CraneUserId'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ResetKey')
    )
    # ### end Alembic commands ###
